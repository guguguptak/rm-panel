// *** AUTOGENERATED // placing any import before this line will break autogeneration
import {
    vaxView,
    vaxForm,
    vaxBox,
    vaxField,
    vaxFieldset,
    vaxInputField,
    vaxCheckbox,
    vaxButton,
    vaxFileInput,
    vaxFileSelect,
} from "@/components";
// *** AUTOGENERATED end

import {
    jsonViewDataMixin,
    jsonDataMixin,
    submitPostMixin,
    permissionsMixin,
} from "@/utils/mixins.js";

import {
    everythingForAccessLevelStr,
    noFilesSelectedStr,
//    mailerTypesStr,
} from "@/utils/i18n-data.js";

import {
    roleToAccessLevel
} from "@/utils/userRoles.js";

import {
    importCsv,
} from "@/utils/misc.js";

const DATA_FILE_LIST = "fileList";

export default {
  name: "rmPermissions",
  components: {
    vaxView,
    vaxForm,
    vaxBox,
    vaxField,
    vaxInputField,
    vaxButton,
    vaxFileInput,
    vaxFileSelect,
  },
  data () {
    return {
      afterPost: () => this.getJsonViewData(),
    }
  },
  methods: {
    userManages: ( user ) => user.manages ?? everythingForAccessLevelStr[roleToAccessLevel[user.role]],
    importFromCsv ( event ) {
      if ( !importCsv( event.target.form, (lines) => {
        const names = [];
        const emails = [];
        for( const line of lines ) {
          const spl = line.split(/[,;]+/);
          if ( spl[0] !== undefined && spl[0] !== "" && spl[1] !== undefined && spl[1] !== "" ) {
            names.push( spl[0].trim() );
            emails.push( spl[1].trim() );
          }
        }
        document.getElementsByName( "name" )[0].value = names.join( ";" );
        document.getElementsByName( "email" )[0].value = emails.join( ";" );
      } ) ) {
        alert( noFilesSelectedStr );
      }
    },
    goToUserSettings ( userId ) {
      this.$router.push( { path: "/accountSettings", query: { id: userId } } );
    },
    mailTo ( event ) {
      this.submitPost( event );
    }
  },
  mixins: [
    jsonViewDataMixin,
    jsonDataMixin( DATA_FILE_LIST ),
    submitPostMixin,
    permissionsMixin,
  ],
}
