// *** AUTOGENERATED // placing any import before this line will break autogeneration
import {
    vaxView,
    vaxForm,
    vaxButton,
    vaxFileInput,
} from "@/components";
// *** AUTOGENERATED end

import {
    jsonViewDataMixin,
    submitPostMixin,
} from "@/utils/mixins.js";

import {
    levelNamesByUnitTypeStr,
    noFilesSelectedStr,
} from "@/utils/i18n-data.js";

import {
    importCsv,
    toArray,
} from "@/utils/misc.js";

export default {
  name: "rmDefineClazzes",
  components: {
    vaxView,
    vaxForm,
    vaxButton,
    vaxFileInput,
  },
  data () {
    return {
      levelNamesByUnitType: levelNamesByUnitTypeStr,
      afterPost: () => this.getJsonViewData(),
    }
  },
  computed: {
    computedCountsKids () {
      return toArray( this.jsonView.counts[0] ).reduce(
          (sum, lvl) => sum + toArray( lvl )
            .reduce( (a, b) => a + b, 0 ),
        0 );
    },
    computedCountsAdults () {
      return toArray( this.jsonView.counts[1] ).reduce(
          (sum, lvl) => sum + toArray( lvl )
            .reduce( (a, b) => a + b, 0 ),
        0 );
    },
    computedCountsClazzes () {
      return toArray( this.jsonView.counts[0] ).reduce(
         (sum, lvl) => sum + toArray( lvl )
           .reduce( (a, b) => a + ( b === 0 ? 0 : 1 ), 0 ),
        0 );
    },
  },
  methods: {
    getCount ( i, j, k ) {
      const cnt = this.jsonView.counts;
      if ( cnt[i] === undefined ) {
        return undefined;
      }
      const cntI = cnt[i];
      if ( cntI[j] === undefined ) {
        return undefined;
      }
      return cntI[j][k] ?? undefined;
    },
    importFromCsv ( event ) {
      if ( !importCsv( event.target.form, (lines) => {
        const trs = document.getElementById( "clazz-data-table" ).getElementsByTagName( "tr" );
        for( var i = 0, maxI = lines.length; i < maxI; i++ ) {
          const tds = trs[i].getElementsByTagName( "td" );
          const vals = lines[i].split(/[,; ]+/);
          for( var j = 0, maxJ = vals.length; j < maxJ; j++  ) {
            const val = vals[j];
            if ( val !== "" ) {
              tds[j].getElementsByTagName( "input" )[0].value = val;
            }
          }
        }      
      } ) ) {
        alert( noFilesSelectedStr );
      } 
    },
  },
  mixins: [
    jsonViewDataMixin,
    submitPostMixin,
  ]
}
